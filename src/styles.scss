// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// define custom palettes for material

$dark-primary-text: rgba(black, 0.87);
$light-primary-text: white;

$primary-palette: (
  50: #eaebf7,
  100: #cacdec,
  200: #a7aee0,
  300: #848dd2,
  400: #6a73c8,
  500: #2f2a86,
  600: #4b51b4,
  700: #4347a8,
  800: #3b3c9b,
  900: #2f2a86,
  A100: #6a73c8,
  A200: #4347a8,
  A400: #3b3c9b,
  A700: #2f2a86,
  contrast: (
    50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $dark-primary-text,
    400: $dark-primary-text,
    500: $light-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text,
    A100: $dark-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text,
  ),
);

$accent-palette: (
  50: #feebef,
  100: #fcccd5,
  200: #ec97a0,
  300: #e26f7b,
  400: #ed4b5c,
  500: #f43544,
  600: #e42b42,
  700: #d2213c,
  800: #c51934,
  900: #b60529,
  A100: #ff8a80,
  A200: #ff5252,
  A400: #ff1744,
  A700: #d50000,
  contrast: (
    50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $dark-primary-text,
    400: $dark-primary-text,
    500: $light-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text,
    A100: $dark-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$jpo-univ-eiffel-primary: mat.define-palette($primary-palette);
$jpo-univ-eiffel-accent: mat.define-palette($accent-palette);

// The warn palette is optional (defaults to red).
$jpo-univ-eiffel-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$jpo-univ-eiffel-theme: mat.define-light-theme(
  (
    color: (
      primary: $jpo-univ-eiffel-primary,
      accent: $jpo-univ-eiffel-accent,
      warn: $jpo-univ-eiffel-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($jpo-univ-eiffel-theme);

@import "primeng/resources/themes/lara-light-blue/theme.css";
@import "primeng/resources/primeng.css";

@import "/node_modules//bootstrap-icons//font/bootstrap-icons.css";

@import "/src/app/theme";

// custom modal animations
@import "src/app/shared/components/modal/modal-animations.scss";

@import url("https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Inter", sans-serif;
}

.p-inputswitch {
  display: flex;
}

.small-switch-btn {
  .p-inputswitch {
    height: 1.4rem;
    width: 2.6rem;

    &.p-inputswitch-checked {
      .p-inputswitch-slider::before {
        transform: translateX(1rem);
      }
    }

    .p-inputswitch-slider::before {
      width: 0.9rem;
      height: 0.9rem;
      margin-top: -0.45rem;
    }
  }
}

.loader {
  width: 1rem;
  height: 1rem;
  border: 1.5px solid #fff;
  border-bottom-color: transparent;
  border-radius: 50%;
  display: inline-block;
  box-sizing: border-box;
  animation: spinning 1s linear infinite;
}

@keyframes spinning {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}